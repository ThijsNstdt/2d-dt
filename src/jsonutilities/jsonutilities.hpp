//// Created by thijs on 04/01/2023.//#ifndef INC_2D_DT_JSONUTILITIES_HPP#define INC_2D_DT_JSONUTILITIES_HPP#include <json/json.h>#include <string>#include <memory>#include <fstream>#include <iostream>namespace jsonUtilities {    template <typename Iterable>    inline Json::Value iterable2json(Iterable const &cont) {        Json::Value v;        for (auto&& element: cont) {            v.append(element);        }        return v;    }    inline void writeVectorToJson(const Json::Value &data, const std::vector<std::string> &valueLocation, const std::string &key, const std::string &filename) {        Json::StreamWriterBuilder builder;        const std::unique_ptr<Json::StreamWriter> writer(builder.newStreamWriter());        Json::Value writeLocation;        for (const auto& locString : valueLocation) {            writeLocation = writeLocation[locString];        }                writeLocation[key] = data;        std::ofstream outFile(filename, std::ofstream::app);        if(!outFile.is_open()) {            throw std::runtime_error("in `writeVectorToJson` of jsonUtilities: Problem with opening file");        }        writer->write(writeLocation, &outFile);        outFile.close();    }}#endif //INC_2D_DT_JSONUTILITIES_HPP